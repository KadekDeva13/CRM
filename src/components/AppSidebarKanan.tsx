import React from "react";

type Notification = { id: string; title: string; time: string; icon?: React.ReactNode };
type Activity = { id: string; text: string; time: string; tone?: "purple" | "green" | "blue" | "yellow"; };
type Contact = { id: string; name: string; avatar: string };

export default function AppSidebarKanan(): React.ReactElement {
  const notifications: Notification[] = [
    { id: "n1", title: "You fixed a bug.", time: "just now",        icon: <NotifBellA className="h-3.5 w-3.5" /> },
    { id: "n2", title: "New user registered.", time: "59 minutes ago", icon: <NotifUser className="h-3.5 w-3.5" /> },
    { id: "n3", title: "You fixed a bug.", time: "12 hours ago",     icon: <NotifBellA className="h-3.5 w-3.5" /> },
    { id: "n4", title: "Andi Lane subscribed to you.", time: "Today, 11:59 AM", icon: <NotifWaves className="h-3.5 w-3.5" /> },
  ];

  const activities: Activity[] = [
    { id: "a1", text: "Changed the style.", time: "just now", tone: "purple" },
    { id: "a2", text: "Released a new version.", time: "59 minutes ago", tone: "blue" },
    { id: "a3", text: "Submitted a bug.", time: "12 hours ago", tone: "yellow" },
    { id: "a4", text: "Modified a data in Page X.", time: "Today, 11:59 AM", tone: "green" },
    { id: "a5", text: "Deleted a page in Project X.", time: "Feb 2, 2025", tone: "blue" },
  ];

  const contacts: Contact[] = [
    { id: "c1", name: "Natali Craig", avatar: "https://i.pravatar.cc/40?img=3" },
    { id: "c2", name: "Drew Cano", avatar: "https://i.pravatar.cc/40?img=5" },
    { id: "c3", name: "Andi Lane", avatar: "https://i.pravatar.cc/40?img=7" },
    { id: "c4", name: "Koray Okumus", avatar: "https://i.pravatar.cc/40?img=11" },
    { id: "c5", name: "Kate Morrison", avatar: "https://i.pravatar.cc/40?img=15" },
    { id: "c6", name: "Melody Macy", avatar: "https://i.pravatar.cc/40?img=19" },
  ];

  return (
    <aside
      className={[
        "fixed right-0 top-16 z-30",
        "h-[calc(100vh-4rem)] w-72 shrink-0",
        "border-l border-white/5 bg-[#1a1a1a] text-white",
      ].join(" ")}
      aria-label="Right sidebar"
    >
      <div className="h-full overflow-y-auto p-4 text-sm text-white/80">
        <Section title="Notifications">
          <ul className="space-y-3">
            {notifications.map((n) => (
              <li key={n.id} className="flex items-start gap-3 rounded-lg p-2 hover:bg-white/5">
                <Badge className="mt-0.5">
                  {n.icon ?? <BellIcon className="h-3.5 w-3.5" />}
                </Badge>
                <div className="min-w-0">
                  <div className="truncate">{n.title}</div>
                  <div className="text-[11px] text-white/40">{n.time}</div>
                </div>
              </li>
            ))}
          </ul>
        </Section>

        <Section title="Activities" className="mt-6">
          <ul className="space-y-3">
            {activities.map((a) => (
              <li key={a.id} className="flex items-start gap-3 rounded-lg p-2 hover:bg-white/5">
                <Dot tone={a.tone} />
                <div className="min-w-0">
                  <div className="truncate">{a.text}</div>
                  <div className="text-[11px] text-white/40">{a.time}</div>
                </div>
              </li>
            ))}
          </ul>
        </Section>

        <Section title="Contacts" className="mt-6">
          <ul className="space-y-3">
            {contacts.map((c) => (
              <li key={c.id} className="flex items-center gap-3 rounded-lg p-2 hover:bg-white/5">
                <img
                  src={c.avatar}
                  alt={c.name}
                  className="h-8 w-8 rounded-full border border-white/10 object-cover"
                />
                <div className="truncate">{c.name}</div>
              </li>
            ))}
          </ul>
        </Section>
      </div>
    </aside>
  );
}

function Section({
  title,
  children,
  className,
}: {
  title: string;
  children: React.ReactNode;
  className?: string;
}) {
  return (
    <section className={className}>
      <h3 className="mb-3 px-1 text-[13px] font-semibold text-white">{title}</h3>
      {children}
    </section>
  );
}

function Badge({ className, children }: { className?: string; children: React.ReactNode }) {
  return (
    <span
      className={[
        "inline-flex h-7 w-7 items-center justify-center",
        "rounded-md border border-white/10 bg-white text-black",
        className ?? "",
      ].join(" ")}
    >
      {children}
    </span>
  );
}


function Dot({ tone = "purple" }: { tone?: "purple" | "green" | "blue" | "yellow" }) {
  const bg =
    tone === "green"
      ? "bg-emerald-400"
      : tone === "blue"
      ? "bg-sky-400"
      : tone === "yellow"
      ? "bg-amber-300"
      : "bg-fuchsia-400";
  return <span className={`mt-1.5 h-2.5 w-2.5 shrink-0 rounded-full ${bg}`} />;
}

function BellIcon({ className }: { className?: string }) {
  return (
    <svg viewBox="0 0 20 20" fill="none" className={className} aria-hidden="true">
      <path
        d="M10 17a2 2 0 0 0 2-2H8a2 2 0 0 0 2 2Zm6-5V9a6 6 0 1 0-12 0v3L2 15h16l-2-3Z"
        stroke="currentColor"
        strokeWidth={1.5}
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  );
}


function NotifBellA({ className }: { className?: string }) {
  return (
    <svg width="14" height="14" viewBox="0 0 14 14" className={className} fill="none" xmlns="http://www.w3.org/2000/svg" aria-hidden="true">
      <path
        d="M12 7.99979H13C13.1326 7.99979 13.2598 7.94711 13.3536 7.85334C13.4473 7.75958 13.5 7.6324 13.5 7.49979C13.5 7.36718 13.4473 7.24 13.3536 7.14624C13.2598 7.05247 13.1326 6.99979 13 6.99979H12V5.99979H13C13.1326 5.99979 13.2598 5.94711 13.3536 5.85334C13.4473 5.75957 13.5 5.6324 13.5 5.49979C13.5 5.36718 13.4473 5.24 13.3536 5.14624C13.2598 5.05247 13.1326 4.99979 13 4.99979H11.975C11.8646 3.90238 11.3933 2.87259 10.635 2.07166L11.8538 0.85354C11.9002 0.807085 11.9371 0.751934 11.9622 0.691238C11.9873 0.630541 12.0003 0.565487 12.0003 0.49979C12.0003 0.434092 11.9873 0.369038 11.9622 0.308342C11.9371 0.247645 11.9002 0.192495 11.8538 0.14604C11.8073 0.0995847 11.7521 0.0627344 11.6914 0.0375931C11.6308 0.0124517 11.5657 -0.000488283 11.5 -0.000488281C11.4343 -0.00048828 11.3692 0.0124517 11.3086 0.0375931C11.2479 0.0627344 11.1927 0.0995847 11.1462 0.14604L9.87813 1.41479C9.03649 0.819427 8.03093 0.49972 7 0.49972C5.96907 0.49972 4.96351 0.819427 4.12187 1.41479L2.85375 0.14604C2.75993 0.0522195 2.63268 -0.000488281 2.5 -0.000488281C2.36732 -0.000488281 2.24007 0.0522195 2.14625 0.14604C2.05243 0.23986 1.99972 0.367108 1.99972 0.49979C1.99972 0.632472 2.05243 0.759719 2.14625 0.85354L3.365 2.07166C2.6067 2.87259 2.13544 3.90238 2.025 4.99979H1C0.867392 4.99979 0.740215 5.05247 0.646447 5.14624C0.552678 5.24 0.5 5.36718 0.5 5.49979C0.5 5.6324 0.552678 5.75957 0.646447 5.85334C0.740215 5.94711 0.867392 5.99979 1 5.99979H2V6.99979H1C0.867392 6.99979 0.740215 7.05247 0.646447 7.14624C0.552678 7.24 0.5 7.36718 0.5 7.49979C0.5 7.6324 0.552678 7.75958 0.646447 7.85334C0.740215 7.94711 0.867392 7.99979 1 7.99979H2V8.49979C2 8.66854 2.00875 8.83541 2.025 8.99979H1C0.867392 8.99979 0.740215 9.05247 0.646447 9.14624C0.552678 9.24 0.5 9.36718 0.5 9.49979C0.5 9.6324 0.552678 9.75958 0.646447 9.85334C0.740215 9.94711 0.867392 9.99979 1 9.99979H2.23C2.54904 11.015 3.18366 11.9019 4.04155 12.5316C4.89944 13.1612 5.93584 13.5008 7 13.5008C8.06416 13.5008 9.10056 13.1612 9.95845 12.5316C10.8163 11.9019 11.451 11.015 11.77 9.99979H13C13.1326 9.99979 13.2598 9.94711 13.3536 9.85334C13.4473 9.75958 13.5 9.6324 13.5 9.49979C13.5 9.36718 13.4473 9.24 13.3536 9.14624C13.2598 9.05247 13.1326 8.99979 13 8.99979H11.975C11.9913 8.83541 12 8.66854 12 8.49979V7.99979ZM7 1.49979C7.97381 1.501 8.91381 1.85703 9.64408 2.50125C10.3744 3.14547 10.8448 4.03373 10.9675 4.99979H3.03C3.15271 4.0333 3.62356 3.1447 4.35435 2.50043C5.08515 1.85615 6.02576 1.50039 7 1.49979ZM7.5 12.4673V7.49979C7.5 7.36718 7.44732 7.24 7.35355 7.14624C7.25979 7.05247 7.13261 6.99979 7 6.99979C6.86739 6.99979 6.74021 7.05247 6.64645 7.14624C6.55268 7.24 6.5 7.36718 6.5 7.49979V12.4673C5.53394 12.3446 4.64568 11.8741 4.00146 11.1439C3.35724 10.4136 3.00121 9.4736 3 8.49979V5.99979H11V8.49979C10.9988 9.4736 10.6428 10.4136 9.99854 11.1439C9.35432 11.8741 8.46606 12.3446 7.5 12.4673Z"
        fill="currentColor"
      />
    </svg>
  );
}

function NotifUser({ className }: { className?: string }) {
  return (
    <svg width="14" height="14" viewBox="0 0 14 14" className={className} fill="none" xmlns="http://www.w3.org/2000/svg" aria-hidden="true">
      <path
        d="M13.4324 12.2502C12.4806 10.6046 11.0137 9.42461 9.3018 8.86524C10.1486 8.36115 10.8065 7.59303 11.1744 6.67886C11.5424 5.76468 11.6001 4.75499 11.3387 3.80483C11.0773 2.85468 10.5112 2.01661 9.72741 1.41931C8.94359 0.82202 7.98538 0.498535 6.99993 0.498535C6.01447 0.498535 5.05626 0.82202 4.27244 1.41931C3.48863 2.01661 2.92255 2.85468 2.66114 3.80483C2.39973 4.75499 2.45744 5.76468 2.82542 6.67886C3.19339 7.59303 3.85128 8.36115 4.69805 8.86524C2.98618 9.42399 1.5193 10.604 0.567425 12.2502C0.532518 12.3072 0.509365 12.3705 0.499331 12.4365C0.489297 12.5025 0.492585 12.5699 0.509003 12.6346C0.52542 12.6993 0.554634 12.7601 0.59492 12.8133C0.635206 12.8666 0.685749 12.9112 0.743566 12.9446C0.801383 12.978 0.865303 12.9995 0.931555 13.0078C0.997807 13.0161 1.06505 13.011 1.12931 12.9929C1.19358 12.9748 1.25356 12.944 1.30573 12.9023C1.3579 12.8606 1.40119 12.8089 1.43305 12.7502C2.61055 10.7152 4.6918 9.50024 6.99993 9.50024C9.30805 9.50024 11.3893 10.7152 12.5668 12.7502C12.5987 12.8089 12.642 12.8606 12.6941 12.9023C12.7463 12.944 12.8063 12.9748 12.8705 12.9929C12.9348 13.011 13.002 13.0161 13.0683 13.0078C13.1345 12.9995 13.1985 12.978 13.2563 12.9446C13.3141 12.9112 13.3646 12.8666 13.4049 12.8133C13.4452 12.7601 13.4744 12.6993 13.4908 12.6346C13.5073 12.5699 13.5106 12.5025 13.5005 12.4365C13.4905 12.3705 13.4673 12.3072 13.4324 12.2502ZM3.49993 5.00024C3.49993 4.308 3.7052 3.63131 4.08978 3.05574C4.47437 2.48017 5.02099 2.03156 5.66053 1.76666C6.30008 1.50175 7.00381 1.43244 7.68274 1.56749C8.36168 1.70254 8.98532 2.03588 9.4748 2.52536C9.96428 3.01485 10.2976 3.63849 10.4327 4.31742C10.5677 4.99635 10.4984 5.70009 10.2335 6.33963C9.9686 6.97917 9.51999 7.52579 8.94442 7.91038C8.36885 8.29496 7.69216 8.50024 6.99993 8.50024C6.07197 8.49924 5.18231 8.13018 4.52615 7.47401C3.86999 6.81785 3.50092 5.92819 3.49993 5.00024Z"
        fill="currentColor"
      />
    </svg>
  );
}

function NotifWaves({ className }: { className?: string }) {
  return (
    <svg width="16" height="12" viewBox="0 0 16 12" className={className} fill="none" xmlns="http://www.w3.org/2000/svg" aria-hidden="true">
      <path
        d="M7.99991 3.49976C7.50546 3.49976 7.02211 3.64639 6.61099 3.92109C6.19986 4.19579 5.87943 4.58624 5.69021 5.04305C5.50099 5.49987 5.45148 6.00254 5.54795 6.48749C5.64441 6.97244 5.88251 7.4179 6.23214 7.76753C6.58178 8.11716 7.02723 8.35526 7.51219 8.45173C7.99714 8.54819 8.4998 8.49868 8.95662 8.30946C9.41344 8.12024 9.80388 7.79981 10.0786 7.38869C10.3533 6.97757 10.4999 6.49422 10.4999 5.99976C10.4999 5.33672 10.2365 4.70084 9.76768 4.232C9.29884 3.76316 8.66295 3.49976 7.99991 3.49976ZM7.99991 7.49976C7.70324 7.49976 7.41323 7.41179 7.16656 7.24697C6.91988 7.08215 6.72762 6.84788 6.61409 6.57379C6.50056 6.2997 6.47086 5.9981 6.52873 5.70713C6.58661 5.41616 6.72947 5.14888 6.93925 4.9391C7.14903 4.72932 7.4163 4.58646 7.70728 4.52859C7.99825 4.47071 8.29985 4.50041 8.57394 4.61394C8.84803 4.72748 9.08229 4.91973 9.24712 5.16641C9.41194 5.41308 9.49991 5.70309 9.49991 5.99976C9.49991 6.39759 9.34188 6.77912 9.06057 7.06042C8.77927 7.34173 8.39774 7.49976 7.99991 7.49976ZM12.6068 7.94601C12.392 8.45387 12.0946 8.9227 11.7268 9.33351C11.6377 9.42989 11.5143 9.48738 11.3832 9.49359C11.2522 9.4998 11.1239 9.45423 11.0261 9.3667C10.9283 9.27917 10.8689 9.15671 10.8606 9.02575C10.8523 8.89478 10.8958 8.7658 10.9818 8.66664C11.6383 7.9336 12.0013 6.98413 12.0013 6.00008C12.0013 5.01602 11.6383 4.06655 10.9818 3.33351C10.9368 3.2848 10.9019 3.22762 10.8792 3.16529C10.8565 3.10297 10.8464 3.03675 10.8495 2.9705C10.8527 2.90424 10.869 2.83927 10.8975 2.77937C10.926 2.71948 10.9661 2.66585 11.0155 2.62161C11.0649 2.57737 11.1227 2.5434 11.1853 2.52169C11.248 2.49998 11.3144 2.49096 11.3806 2.49515C11.4468 2.49934 11.5115 2.51666 11.5709 2.5461C11.6304 2.57555 11.6833 2.61652 11.7268 2.66664C12.3581 3.3731 12.776 4.24425 12.9318 5.17882C13.0875 6.11338 12.9748 7.07297 12.6068 7.94601ZM4.31241 4.44289C4.0174 5.14124 3.92692 5.90906 4.05152 6.65686C4.17611 7.40466 4.51066 8.10166 5.01616 8.66664C5.10212 8.7658 5.14565 8.89478 5.13736 9.02575C5.12907 9.15671 5.06962 9.27917 4.97184 9.3667C4.87406 9.45423 4.74579 9.4998 4.6147 9.49359C4.48362 9.48738 4.36023 9.42989 4.27116 9.33351C3.45028 8.41724 2.99635 7.23028 2.99635 6.00008C2.99635 4.76987 3.45028 3.58292 4.27116 2.66664C4.35959 2.5676 4.48375 2.50774 4.61631 2.50024C4.74888 2.49274 4.87899 2.53821 4.97804 2.62664C5.07708 2.71507 5.13693 2.83923 5.14443 2.97179C5.15194 3.10436 5.10647 3.23447 5.01804 3.33351C4.72304 3.66169 4.48458 4.03658 4.31241 4.44289ZM15.4999 5.99976C15.5029 7.96335 14.7331 9.84925 13.3568 11.2498C13.3113 11.2984 13.2564 11.3375 13.1956 11.3647C13.1347 11.3919 13.069 11.4067 13.0024 11.4081C12.9358 11.4095 12.8695 11.3976 12.8075 11.3731C12.7456 11.3486 12.6891 11.3119 12.6415 11.2652C12.5939 11.2185 12.5562 11.1628 12.5304 11.1013C12.5047 11.0398 12.4915 10.9738 12.4916 10.9072C12.4918 10.8405 12.5052 10.7745 12.5312 10.7132C12.5572 10.6518 12.5952 10.5962 12.643 10.5498C13.8347 9.33562 14.5024 7.70229 14.5024 6.00101C14.5024 4.29974 13.8347 2.66641 12.643 1.45226C12.5499 1.35761 12.4981 1.22984 12.4992 1.09704C12.5002 0.964237 12.554 0.837295 12.6487 0.744138C12.7433 0.650981 12.8711 0.599238 13.0039 0.600293C13.1367 0.601348 13.2636 0.655114 13.3568 0.749763C14.7331 2.15028 15.5029 4.03618 15.4999 5.99976ZM3.35679 10.5485C3.40283 10.5954 3.43919 10.6509 3.4638 10.7118C3.4884 10.7727 3.50077 10.8379 3.50019 10.9036C3.49961 10.9693 3.48609 11.0342 3.46042 11.0947C3.43474 11.1551 3.3974 11.21 3.35054 11.256C3.30367 11.3021 3.2482 11.3384 3.18728 11.363C3.12636 11.3876 3.06119 11.4 2.99549 11.3994C2.92979 11.3988 2.86485 11.3853 2.80438 11.3596C2.74391 11.334 2.68908 11.2966 2.64304 11.2498C1.2669 9.84881 0.49585 7.96354 0.49585 5.99976C0.49585 4.03599 1.2669 2.15072 2.64304 0.749763C2.68857 0.701081 2.74338 0.661995 2.80424 0.634803C2.8651 0.607611 2.93078 0.592863 2.99742 0.591425C3.06406 0.589987 3.13032 0.601889 3.19229 0.626431C3.25427 0.650973 3.31071 0.68766 3.3583 0.734333C3.40589 0.781007 3.44367 0.836725 3.46941 0.898211C3.49515 0.959697 3.50834 1.02571 3.5082 1.09237C3.50806 1.15902 3.49459 1.22498 3.46859 1.28636C3.44259 1.34773 3.40457 1.40329 3.35679 1.44976C2.16508 2.66391 1.49744 4.29724 1.49744 5.99851C1.49744 7.69979 2.16508 9.33311 3.35679 10.5473V10.5485Z"
        fill="currentColor"
      />
    </svg>
  );
}
